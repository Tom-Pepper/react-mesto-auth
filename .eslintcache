[{"/Users/artem/Desktop/dev/react-mesto-auth/src/index.js":"1","/Users/artem/Desktop/dev/react-mesto-auth/src/components/App.js":"2","/Users/artem/Desktop/dev/react-mesto-auth/src/reportWebVitals.js":"3","/Users/artem/Desktop/dev/react-mesto-auth/src/components/Header.js":"4","/Users/artem/Desktop/dev/react-mesto-auth/src/components/Main.js":"5","/Users/artem/Desktop/dev/react-mesto-auth/src/components/Footer.js":"6","/Users/artem/Desktop/dev/react-mesto-auth/src/components/PopupWithForm.js":"7","/Users/artem/Desktop/dev/react-mesto-auth/src/components/ImagePopup.js":"8","/Users/artem/Desktop/dev/react-mesto-auth/src/components/EditProfilePopup.js":"9","/Users/artem/Desktop/dev/react-mesto-auth/src/components/EditAvatarPopup.js":"10","/Users/artem/Desktop/dev/react-mesto-auth/src/components/AddPlacePopup.js":"11","/Users/artem/Desktop/dev/react-mesto-auth/src/utils/api.js":"12","/Users/artem/Desktop/dev/react-mesto-auth/src/contexts/CurrentUserContext.js":"13","/Users/artem/Desktop/dev/react-mesto-auth/src/components/Card.js":"14","/Users/artem/Desktop/dev/react-mesto-auth/src/components/ProtectedRoute.js":"15","/Users/artem/Desktop/dev/react-mesto-auth/src/components/Register.js":"16","/Users/artem/Desktop/dev/react-mesto-auth/src/components/Login.js":"17","/Users/artem/Desktop/dev/react-mesto-auth/src/components/InfoTooltip.js":"18","/Users/artem/Desktop/dev/react-mesto-auth/src/utils/auth.js":"19","/Users/artem/Desktop/dev/react-mesto-auth/src/components/Error.js":"20"},{"size":395,"mtime":1616071872847,"results":"21","hashOfConfig":"22"},{"size":10643,"mtime":1616270628179,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1611827845339,"results":"24","hashOfConfig":"22"},{"size":725,"mtime":1616259885853,"results":"25","hashOfConfig":"22"},{"size":1981,"mtime":1616256560698,"results":"26","hashOfConfig":"22"},{"size":234,"mtime":1611908621434,"results":"27","hashOfConfig":"22"},{"size":686,"mtime":1612256229315,"results":"28","hashOfConfig":"22"},{"size":688,"mtime":1611827845319,"results":"29","hashOfConfig":"22"},{"size":2526,"mtime":1611826084919,"results":"30","hashOfConfig":"22"},{"size":1254,"mtime":1612255262781,"results":"31","hashOfConfig":"22"},{"size":2012,"mtime":1611826084915,"results":"32","hashOfConfig":"22"},{"size":2831,"mtime":1616223391802,"results":"33","hashOfConfig":"22"},{"size":120,"mtime":1611826084920,"results":"34","hashOfConfig":"22"},{"size":2142,"mtime":1611826106916,"results":"35","hashOfConfig":"22"},{"size":565,"mtime":1616231891360,"results":"36","hashOfConfig":"22"},{"size":1893,"mtime":1616255103192,"results":"37","hashOfConfig":"22"},{"size":1888,"mtime":1616255103197,"results":"38","hashOfConfig":"22"},{"size":1095,"mtime":1616242427477,"results":"39","hashOfConfig":"22"},{"size":1124,"mtime":1616269063061,"results":"40","hashOfConfig":"22"},{"size":399,"mtime":1616271779313,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1tczxz6",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/artem/Desktop/dev/react-mesto-auth/src/index.js",[],["84","85"],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/App.js",["86"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory, withRouter } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport { register, login, getData } from '../utils/auth';\nimport api from \"../utils/api\";\n\nimport '../index.css';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Error from \"./Error\";\n\nfunction App() {\n  // Хуки\n\n  // Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({});\n\n  // Cтейт для авторизации\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  // Стейт для отображения InfoTooltip'а\n  const [isTooltipOpened, setIsTooltipOpened] = useState(false);\n\n  // Стейт для авторизации\n  const [isAuth, setIsAuth] = useState(false);\n\n  // Стейт для карточек\n  const [cards, setCards] = useState([]);\n\n  // Стейты для поп-апов (состояние - открыт / не открыт)\n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n\n  // Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  //Стейт для данных залогиненного пользователя\n  const [userLoginData, setUserLoginData] = useState('');\n\n  const history = useHistory();\n\n  // Получение данных о пользователе\n  useEffect(() => {\n    api.getUserData()\n      .then(res => {\n        setCurrentUser(res)\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  // Получаем карточки с сервера\n  useEffect(() => {\n    api.getCards()\n      .then(res => {\n        setCards(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // Обработчики\n\n  // Обработчик клика по изображению карточки (открытие поп-апа картинки)\n  function handleCardClick(props) {\n    setSelectedCard(props);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Закрытие поп-апов клавишей Esc\n  function handleClosePopupWithEsc (event) {\n    if (event.keyCode === 27) {\n      closeAllPopups();\n    }\n  }\n\n  // Показ/скрытие модалки об успешной/ неудачной регистрации\n  function openRegModal() {\n    setIsTooltipOpened(!isTooltipOpened);\n  }\n\n  // Закрытие модалки об успешной/ неудачной регистрации с помощью кнопки (крестик)\n  function closeRegModal() {\n    setIsTooltipOpened(false);\n    if (isAuth) {\n      history.push('/sign-in')\n    }\n  }\n\n  // Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  // Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n  function handleUpdateAvatar(user) {\n    api.uploadAvatar(user.avatar)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  // Обработчик кнопки редактирования аватарки\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Обработчик кнопки редактирования инф-ии профиля\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Обработчик кнопки добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Обработчик закрытия поп-апов\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setSelectedCard(null);\n    window.removeEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Регистрация и авторизация пользователя\n\n  /**\n   * Регистрация нового пользователя\n   * @param data - введенные человеком логин и пароль\n   */\n  const handleRegister = (data) => {\n    const { email, password } = data;\n    return register(email, password)\n      .then((res) => {\n        if (res.data) {\n          setIsAuth(true);\n          openRegModal();\n        }\n      })\n      .catch((err) => {\n        setIsAuth(false);\n        openRegModal();\n        console.log(`Произошла ошибка: ${err}`);\n        history.push('/sign-up');\n      });\n  };\n\n  /**\n   * Авторизация пользователя\n   * @param data - введенные человеком логин и пароль\n   */\n  const handleLogin = (data) => {\n    const { email, password } = data;\n    return login(email, password)\n      .then((res) => {\n        if (res) {\n          setLoggedIn(true);\n          setIsAuth(true);\n          history.push('/');\n          localStorage.setItem('jwt', res.token);\n        }\n      })\n      .catch((err) => {\n        setIsTooltipOpened(true);\n        console.log(`Произошла ошибка: ${err}`);\n      });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n\n      getData(jwt)\n        .then((res) => {\n          if(res) {\n            setLoggedIn(true);\n            setUserLoginData(res.data.email);\n          }\n        })\n        .catch((err) => {\n          setIsTooltipOpened(true);\n          console.log(`Произошла ошибка: ${err}`);\n        });\n    }\n  }, [history]);\n\n  useEffect(() => {\n    if(loggedIn) {\n      history.push('/');\n    }\n  }, []);\n\n  /**\n   * Логаут пользователя\n   */\n  const handleLogout = () => {\n    localStorage.removeItem('jwt');\n    setIsAuth(false);\n  };\n\n  // Функциональности приложения\n\n  /**\n   * Функция лайка карточки\n   * @param card - текущая карточка\n   */\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n      .catch((err) => console.log(err));\n  }\n\n  // Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards(cards.filter(item => item._id !== card._id));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link)\n      .then(res => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  /**\n   * Отрисовка приложения\n   */\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n\n        <Switch>\n          <ProtectedRoute\n            exact path=\"/\"\n            loggedIn={loggedIn}\n            component={Main}\n            isEditAvatarPopupOpen={handleEditAvatarClick}\n            isEditProfilePopupOpen={handleEditProfileClick}\n            isAddPlacePopupOpen={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            logout={handleLogout}\n            userLoginData={userLoginData}\n          />\n          <Route path=\"/sign-in\">\n            <Login handleLogin={handleLogin} />\n          </Route>\n          <Route path=\"/sign-up\">\n            <Register handleRegister={handleRegister} />\n          </Route>\n          <Route path=\"*\">\n            <Error />\n          </Route>\n        </Switch>\n\n        <Footer />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          onClick={(e) => e.stopPropagation()}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <PopupWithForm\n          onClose={closeAllPopups}\n          name=\"confirm-delete\"\n          title=\"Вы уверены?\"\n          buttonName=\"Да\"\n        >\n        </PopupWithForm>\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n        <InfoTooltip\n          isOpen={isTooltipOpened}\n          onClose={closeRegModal}\n          isRegSuccess={isAuth}\n          regSuccess=\"Вы успешно зарегестрировались!\"\n          regFailed=\"Что-то пошло не так! Попробуйте ещё раз.\"\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default withRouter(App);\n","/Users/artem/Desktop/dev/react-mesto-auth/src/reportWebVitals.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/Header.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/Main.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/Footer.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/PopupWithForm.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/ImagePopup.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/EditProfilePopup.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/EditAvatarPopup.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/AddPlacePopup.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/utils/api.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/contexts/CurrentUserContext.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/Card.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/ProtectedRoute.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/Register.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/Login.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/InfoTooltip.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/utils/auth.js",[],"/Users/artem/Desktop/dev/react-mesto-auth/src/components/Error.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":211,"column":6,"nodeType":"93","endLine":211,"endColumn":8,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'loggedIn'. Either include them or remove the dependency array.","ArrayExpression",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [history, loggedIn]",{"range":"100","text":"101"},[5832,5834],"[history, loggedIn]"]