{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onClick","type","length","Main","isEditAvatarPopupOpen","isEditProfilePopupOpen","isAddPlacePopupOpen","cards","avatar","about","map","Footer","Date","getFullYear","PopupWithForm","isOpen","onClose","title","children","buttonName","onSubmit","ImagePopup","api","config","this","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_getResponse","all","getUserData","getCards","job","method","body","JSON","stringify","id","cardId","authorization","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","event","preventDefault","required","placeholder","onChange","target","value","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","onAddPlace","cardTitle","setCardTitle","cardLink","setCardLink","App","setCurrentUser","catch","err","console","log","setIsAvatarPopupOpen","setIsProfilePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","handleClosePopupWithEsc","keyCode","closeAllPopups","window","removeEventListener","setCards","Provider","addEventListener","props","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","item","user","uploadAvatar","e","stopPropagation","addNewCard","editProfile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbfc7136.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\n\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logo} alt=\"Логотип проекта 'Место'\" />\n    </header>\n  );\n}\n  \nexport default Header;","import { createContext } from 'react';\n\nconst CurrentUserContext = createContext();\n\nexport default CurrentUserContext;\n","import React, { useContext } from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\n  //Подписка на контекст CurrentUserContext\n  const currentUser = useContext(CurrentUserContext);\n\n  //Определяем, являемся ли мы владельцем карточки\n  const isOwn = card.owner._id === currentUser._id;\n\n  //Переменная для класса кнопки удаления (если карточка наша -- видим иконку удаления)\n  const cardDeleteButtonClassName = (\n    `element__delete-button ${isOwn ? 'element__delete-button_visible' : ''}`\n  );\n\n  //Определяем, есть ли у карточки поставленный нами лайк\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n  //Переменная для класса кнопки лайка (закрашивание, если карточка лайкнута нами)\n  const cardLikeButtonClassName = (\n    `element__like-button ${isLiked ? 'element__like-button_active' : ''}`\n  );\n\n  //Обработчик клика по карточке\n  function handleCardClick() {\n    onCardClick(card)\n  }\n\n  //Обработчик клика по лайку\n  function handleCardLike() {\n    onCardLike(card)\n  }\n\n  //Обработчик удаления карточки\n  function handleDeleteCard() {\n    onCardDelete(card)\n  }\n\n  return (\n    <figure className=\"element\">\n      <img className=\"element__image\" src={card.link} alt={card.name} onClick={handleCardClick} />\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteCard}></button>\n      <figcaption className=\"element__caption\">\n        <h2 className=\"element__title\">{card.name}</h2>\n        <div className=\"element__like-wrapper\">\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleCardLike}></button>\n          <p className=\"element__like-counter\">{card.likes.length}</p>\n        </div>\n      </figcaption>\n    </figure>\n  )\n}\n\nexport default Card;\n","import React, {useContext} from 'react';\nimport Card from './Card';\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Main({ isEditAvatarPopupOpen, isEditProfilePopupOpen, isAddPlacePopupOpen, onCardClick, cards, onCardLike,\n                onCardDelete }) {\n  //Подписка на контекст CurrentUserContext\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__wrapper\">\n          <div className=\"profile__avatar-wrapper\" onClick={isEditAvatarPopupOpen}>\n            <button type=\"button\" className=\"profile__avatar-edit-button\"></button>\n            <img className=\"profile__avatar\" src={`${currentUser.avatar}`} alt=\"Аватар пользователя\" />\n          </div>\n          <div className=\"profile__info\">\n            <h1 className=\"profile__info-name\">{currentUser.name}</h1>\n            <p className=\"profile__info-job\">{currentUser.about}</p>\n            <button type=\"button\" className=\"profile__edit-button\" onClick={isEditProfilePopupOpen}></button>\n          </div>\n        </div>\n        <button type=\"button\" className=\"profile__add-button\" onClick={isAddPlacePopupOpen}></button>\n      </section>\n      <section className=\"elements\">\n        {\n          cards.map(card => (\n            <Card\n              card={card}\n              key={card._id}\n              onCardClick={onCardClick}\n              onCardLike={onCardLike}\n              onCardDelete={onCardDelete}\n            />\n          ))\n        }\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 - {new Date().getFullYear()}. Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction PopupWithForm({ isOpen, onClose, name, title, children, buttonName, onSubmit }) {\n  return (\n      <div className={`popup popup_type_${name} ${isOpen && \"popup_is-opened\"}`}>\n        <div className=\"popup__container\">\n          <button type=\"button\" className=\"popup__close\" onClick={onClose}></button>\n          <h2 className=\"popup__title\">{title}</h2>\n          <form name={name}\n                className=\"popup__form\"\n                onSubmit={onSubmit}>\n            {children}\n            <button type=\"submit\" className=\"popup__button\">{buttonName}</button>\n          </form>\n        </div>\n      </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n  return (\n    <div className={`popup-image popup ${card && \"popup_is-opened\"}`}>\n      <div className=\"popup-image__container\">\n        <button className=\"popup__close popup-image__close\" onClick={onClose}></button>\n        <div className=\"popup-image__content-container\">\n          <figure className=\"popup-image__photo\">\n            <img src={card ? card.link : \"\"} alt={card ? card.name : \"\"} className=\"popup-image__preview\" />\n            <figcaption className=\"popup-image__title\">{card ? card.name : \"\"}</figcaption>\n          </figure>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","/** Класс API для работы с сервером.\n * Описаны методы для работы с карточками, которые тянутся с сервера и отправляются на сервер\n */\n\nclass Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _getResponse(res) {\n    if(res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    })\n      .then(res => this._getResponse(res))\n  }\n\n  getUserData() {\n    return fetch(`${this._url}/users/me`,\n      {\n        headers: this._headers\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  getInitialData() {\n    return Promise.all([this.getUserData(), this.getCards()]);\n  }\n\n  editProfile(name, job) {\n    return fetch(`${this._url}/users/me`,\n      {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          about: job\n        })\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this._url}/cards`,\n      {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  likeCard(id) {\n    return fetch(`${this._url}/cards/likes/${id}`,\n      {\n        method: \"PUT\",\n        headers: this._headers\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  dislikeCard(id) {\n    return fetch(`${this._url}/cards/likes/${id}`,\n      {\n        method: \"DELETE\",\n        headers: this._headers,\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`,\n      {\n        method: \"DELETE\",\n        headers: this._headers,\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  uploadAvatar(url) {\n    return fetch(`${this._url}/users/me/avatar`,\n      {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: url\n        })\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/likes/${cardId}`,\n      {\n        method: isLiked ? \"PUT\" : \"DELETE\",\n        headers: this._headers\n      })\n      .then(res => this._getResponse(res))\n  }\n}\n\n//Объект api для доступа к серверу, откуда будем тянуть все нужные данные\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-18',\n  headers: {\n    authorization: \"36f02e32-425e-4cd6-9a5e-ab45df68f83b\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;\n","import React, { useState, useContext, useEffect } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  //Подписываемся на контекст\n  const currentUser = useContext(CurrentUserContext);\n\n  //Cтейты имени и описания профиля\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  //После загрузки данных пользователя из API, эти данные будут использоваться в управляемых компонентах (полях)\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser])\n\n  //Функция для изменения имени через поле ввода\n  function handleUserName(event) {\n    setName(event.target.value)\n  }\n\n  //Функция для изменения описания профиля через поле ввода\n  function handleUserDescription(event) {\n    setDescription(event.target.value)\n  }\n\n  //Обработчик сабмита формы\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    //Передача значений управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      name=\"edit-profile\"\n      title=\"Редактировать профиль\"\n      buttonName=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        required\n        name=\"profile-name\"\n        type=\"text\"\n        className=\"popup__name popup__input\"\n        placeholder=\"Имя\"\n        onChange={handleUserName}\n        minLength=\"2\"\n        maxLength=\"40\"\n        value={name ? name : ''}\n      />\n      <span\n        id=\"profile-name-error\"\n        className=\"error\">\n          </span>\n      <input\n        required\n        name=\"profile-job\"\n        type=\"text\"\n        className=\"popup__job popup__input\"\n        placeholder=\"О себе\"\n        onChange={handleUserDescription}\n        minLength=\"2\"\n        maxLength=\"200\"\n        value={description ? description : ''}\n      />\n      <span\n        id=\"profile-job-error\"\n        className=\"error\">\n          </span>\n\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n","import React, { useRef, useEffect } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  //Реф для прямого доступа к DOM-элементу инпута и его значению\n  const avatarRef = useRef('');\n\n  //Очистка поля ввода ссылки после закрытия\n  useEffect(() => {\n    avatarRef.current.value = '';\n  }, [isOpen])\n\n  //Обработчик сабмита формы (обновление аватарки)\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  }\n\n  return(\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Обновить аватар\"\n      name=\"edit-avatar\"\n      buttonName=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        className=\"popup__name popup__input\"\n        type=\"url\"\n        name=\"avatar\"\n        required\n        placeholder=\"Ссылка на фотографию\"\n        ref={avatarRef}\n      />\n      <span\n        id=\"avatar-error\"\n        className=\"error\"\n      >\n      </span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n","import React, { useState, useEffect } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\n  //Стейты для имени и ссылки на картинку\n  const [cardTitle, setCardTitle] = useState('');\n  const [cardLink, setCardLink] = useState('');\n\n  //Обработчик установки названия места\n  function handleCardTitle(event) {\n    setCardTitle(event.target.value)\n  }\n\n  //Обработчик установки картинки (ссылки на картинку)\n  function handleCardLink(event) {\n    setCardLink(event.target.value)\n  }\n\n  //Обработчик сабмита формы поп-апа добавления карточки\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    onAddPlace({\n      name: cardTitle,\n      link: cardLink\n    })\n  }\n\n  useEffect(() => {\n    setCardLink('')\n    setCardTitle('')\n  }, [isOpen])\n\n  return(\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Новое место\"\n      name=\"add-place\"\n      buttonName=\"Создать\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        required\n        name=\"place-name\"\n        type=\"text\"\n        className=\"popup-new-place__description popup__input popup__name\"\n        placeholder=\"Название\"\n        minLength=\"2\"\n        maxLength=\"30\"\n        onChange={handleCardTitle}\n        value={cardTitle ? cardTitle : ''}\n      />\n      <span\n        id=\"place-name-error\"\n        className=\"error\">\n          </span>\n      <input\n        required\n        name=\"place-link\"\n        type=\"url\"\n        className=\"popup-new-place__image-link popup__input popup__job\"\n        placeholder=\"Ссылка на картинку\"\n        onChange={handleCardLink}\n        value={cardLink ? cardLink : ''}\n      />\n      <span\n        id=\"place-link-error\"\n        className=\"error\">\n          </span>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;\n","import React, {useState, useEffect} from 'react';\nimport '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from \"../utils/api\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  //Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    api.getUserData()\n      .then(res => {\n        setCurrentUser(res)\n      })\n      .catch(err => console.log(err));\n  }, [])\n\n  //Стейты для поп-апов (состояние - открыт / не открыт)\n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n\n  //Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  //Обработчик клика по изображению карточки (открытие поп-апа картинки)\n  function handleCardClick(props) {\n    setSelectedCard(props);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Закрытие поп-апов клавишей Esc\n  function handleClosePopupWithEsc (event) {\n    if (event.keyCode === 27) {\n      closeAllPopups();\n    }\n  }\n\n  //Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  //Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n  function handleUpdateAvatar(user) {\n    api.uploadAvatar(user.avatar)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  //Обработчик кнопки редактирования аватарки\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Обработчик кнопки редактирования инф-ии профиля\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Обработчик кнопки добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Обработчик закрытия поп-апов\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setSelectedCard(null);\n    window.removeEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Стейт для карточек\n  const [cards, setCards] = useState([]);\n\n  //Получаем данные по пользователю и карточки с сервера\n  useEffect(() => {\n    api.getCards()\n      .then(res => {\n        setCards(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  //Функция лайка карточки\n  function handleCardLike(card) {\n    //Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n      .catch(err => console.log(err));\n  }\n\n  //Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards(cards.filter(item => item._id !== card._id));\n      })\n      .catch(err => console.log(err));\n  }\n\n  //Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link)\n      .then(res => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n\n        <Main\n          isEditAvatarPopupOpen={handleEditAvatarClick}\n          isEditProfilePopupOpen={handleEditProfileClick}\n          isAddPlacePopupOpen={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n\n        <Footer />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          onClick={(e) => e.stopPropagation()}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <PopupWithForm\n          onClose={closeAllPopups}\n          name=\"confirm-delete\"\n          title=\"Вы уверены?\"\n          buttonName=\"Да\"\n        >\n        </PopupWithForm>\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}