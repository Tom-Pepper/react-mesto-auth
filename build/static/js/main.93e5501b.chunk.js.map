{"version":3,"sources":["components/ProtectedRoute.js","contexts/CurrentUserContext.js","utils/auth.js","utils/api.js","images/logo.svg","components/Header.js","components/Login.js","components/Register.js","images/login-success.svg","images/login-failed.svg","components/InfoTooltip.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["ProtectedRoute","Component","component","props","loggedIn","to","CurrentUserContext","createContext","BASE_URL","getResponse","res","ok","json","Promise","reject","status","api","config","this","_url","url","_headers","headers","fetch","then","_getResponse","all","getUserData","getCards","name","job","method","body","JSON","stringify","about","link","id","avatar","cardId","isLiked","authorization","Header","headerText","login","onClick","className","src","logo","alt","Login","handleLogin","useState","email","password","authData","setAuthData","handleOnChange","evt","target","value","onSubmit","preventDefault","type","required","minLength","maxLength","onChange","placeholder","Register","handleRegister","regData","setRegData","InfoTooltip","isOpen","onClose","isRegSuccess","regFailed","regSuccess","loginSuccess","loginFailed","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","likes","some","i","cardLikeButtonClassName","length","Main","isEditAvatarPopupOpen","isEditProfilePopupOpen","isAddPlacePopupOpen","cards","logout","userLoginData","map","Footer","Date","getFullYear","PopupWithForm","title","children","buttonName","ImagePopup","EditProfilePopup","onUpdateUser","setName","description","setDescription","useEffect","event","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","onAddPlace","cardTitle","setCardTitle","cardLink","setCardLink","withRouter","setCurrentUser","setLoggedIn","isTooltipOpened","setIsTooltipOpened","isAuth","setIsAuth","setCards","setIsAvatarPopupOpen","setIsProfilePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setUserLoginData","history","useHistory","handleClosePopupWithEsc","keyCode","closeAllPopups","openRegModal","window","removeEventListener","catch","err","console","log","localStorage","getItem","jwt","token","data","push","Provider","exact","path","addEventListener","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","item","removeItem","setItem","register","user","uploadAvatar","e","stopPropagation","addNewCard","editProfile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93e5501b.chunk.js","sourcesContent":["/**\n * Защищенный роут. Любого незалогиненного пользователя автоматически редиректит\n * на страницу логина на основании пропса @loggedIn\n */\n\nimport React from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\n      }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;\n","import { createContext } from 'react';\n\nconst CurrentUserContext = createContext();\n\nexport default CurrentUserContext;\n","/**\n * Описание авторизации пользователя\n */\n\nexport const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst getResponse = (res) => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\n};\n\nexport const register = (email, password) => {\n  return fetch (`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type':'application/json',\n    },\n    body: JSON.stringify({email, password})\n  })\n    .then((res) => getResponse(res));\n};\n\nexport const login = (email, password) => {\n  return fetch (`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type':'application/json',\n    },\n    body: JSON.stringify({email, password})\n  })\n    .then((res) => getResponse(res));\n};\n\nexport const getData = (token) => {\n  return fetch (`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type':'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n  })\n    .then((res) => getResponse(res));\n};\n","/** Класс API для работы с сервером.\n * Описаны методы для работы с карточками, которые тянутся с сервера и отправляются на сервер\n */\n\nclass Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _getResponse(res) {\n    if(res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    })\n      .then(res => this._getResponse(res))\n  }\n\n  getUserData() {\n    return fetch(`${this._url}/users/me`,\n      {\n        headers: this._headers\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  getInitialData() {\n    return Promise.all([this.getUserData(), this.getCards()]);\n  }\n\n  editProfile(name, job) {\n    return fetch(`${this._url}/users/me`,\n      {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          about: job\n        })\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this._url}/cards`,\n      {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  likeCard(id) {\n    return fetch(`${this._url}/cards/likes/${id}`,\n      {\n        method: \"PUT\",\n        headers: this._headers\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  dislikeCard(id) {\n    return fetch(`${this._url}/cards/likes/${id}`,\n      {\n        method: \"DELETE\",\n        headers: this._headers,\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`,\n      {\n        method: \"DELETE\",\n        headers: this._headers,\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  uploadAvatar(url) {\n    return fetch(`${this._url}/users/me/avatar`,\n      {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: url\n        })\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/likes/${cardId}`,\n      {\n        method: isLiked ? \"PUT\" : \"DELETE\",\n        headers: this._headers\n      })\n      .then(res => this._getResponse(res))\n  }\n}\n\n//Объект api для доступа к серверу, откуда будем тянуть все нужные данные\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-18',\n  headers: {\n    authorization: \"36f02e32-425e-4cd6-9a5e-ab45df68f83b\",\n    \"Content-Type\": \"application/json\",\n  }\n});\nexport default api;\n","export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\nimport { Link } from \"react-router-dom\";\n\n\nfunction Header({ headerText, login, link, loggedIn, onClick }) {\n  return (\n    <header className=\"header\">\n      <div className=\"header__wrapper\">\n        <img className=\"header__logo\" src={logo} alt=\"Логотип проекта 'Место'\" />\n        <div className=\"header__wrapper\">\n          <p className=\"header__user-email\">{login}</p>\n          <Link to={link}\n                onClick={onClick}\n                className={`${loggedIn && 'header__link_logout'} header__link`}\n          >\n            {headerText}\n          </Link>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","/**\n * Компонент авторизации пользователя с необходимыми стейт-переменными.\n */\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Header from \"./Header\";\n\nfunction Login({ handleLogin }) {\n  const [authData, setAuthData] = useState({email: '', password: ''});\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    handleLogin(authData);\n  }\n\n  function handleOnChange(evt) {\n    const { name, value } = evt.target;\n    setAuthData({ ...authData, [name]: value });\n  }\n\n  return (\n    <>\n      <Header headerText={'Регистрация'} link=\"/sign-up\" />\n      <div className=\"authorization\">\n        <form onSubmit={handleSubmit}\n              className=\"authorization__wrapper\">\n          <h3 className=\"authorization__title\">Вход</h3>\n          <input type=\"email\"\n                 required\n                 minLength=\"2\"\n                 maxLength=\"20\"\n                 name=\"email\"\n                 className=\"authorization__data\"\n                 value={authData.email}\n                 onChange={handleOnChange}\n                 placeholder=\"E-mail\"\n          />\n          <input type=\"password\"\n                 required\n                 minLength=\"2\"\n                 maxLength=\"200\"\n                 name=\"password\"\n                 className=\"authorization__data\"\n                 value={authData.password}\n                 onChange={handleOnChange}\n                 placeholder=\"Password\"\n          />\n          <button className=\"authorization__button\"\n                  type=\"submit\"\n          >Войти</button>\n          <Link to=\"/sign-up\"\n                className=\"authorization__login-text\"\n          >Нет учетной записи? Зарегистрироваться</Link>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","/** Компонент регистрации пользователя с необходимыми стейт-переменными.\n */\n\nimport React, { useState } from \"react\";\n\nimport Header from \"./Header\";\nimport {Link} from \"react-router-dom\";\n\nfunction Register({ handleRegister }) {\n  const [regData, setRegData] = useState({email: '', password: ''});\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    handleRegister(regData);\n  }\n\n  function handleOnChange(evt) {\n    const {name, value} = evt.target;\n    setRegData({ ...regData, [name]: value });\n  }\n\n  return (\n    <>\n      <Header headerText={'Войти'} link=\"/sign-in\" />\n      <div className=\"authorization\">\n        <form onSubmit={handleSubmit}\n              className=\"authorization__wrapper\">\n          <h3 className=\"authorization__title\">Регистрация</h3>\n          <input type=\"email\"\n                 required\n                 minLength=\"2\"\n                 maxLength=\"20\"\n                 name=\"email\"\n                 className=\"authorization__data\"\n                 value={regData.email}\n                 onChange={handleOnChange}\n                 placeholder=\"E-mail\"\n          />\n          <input type=\"password\"\n                 required\n                 minLength=\"2\"\n                 maxLength=\"200\"\n                 name=\"password\"\n                 className=\"authorization__data\"\n                 value={regData.password}\n                 onChange={handleOnChange}\n                 placeholder=\"Password\"\n          />\n          <button className=\"authorization__button\"\n                  type=\"submit\"\n          >Зарегистрироваться</button>\n          <Link to=\"/sign-in\"\n                className=\"authorization__login-text\"\n          >Уже зарегистрированы? Войти</Link>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default Register;\n","export default __webpack_public_path__ + \"static/media/login-success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/login-failed.df8eddf6.svg\";","/**\n * Компонент модального окна,\n * который информирует пользователя об успешной (или не очень) регистрации.\n */\n\nimport React from \"react\";\nimport loginSuccess from '../images/login-success.svg';\nimport loginFailed from '../images/login-failed.svg';\n\nfunction InfoTooltip({ isOpen, onClose, isRegSuccess, regFailed, regSuccess }) {\n  return(\n    <>\n      <div className={`popup ${isOpen && 'popup_is-opened'}`}>\n        <div className=\"popup__container popup__reg-modal\">\n          <button type=\"button\"\n                  className=\"popup__close\"\n                  onClick={onClose}\n          ></button>\n          <img className=\"popup__image-reg-modal\"\n               src={`${isRegSuccess ? loginSuccess : loginFailed}`}\n               alt=\"Изображение статуса регистрации\"\n          />\n          <p className=\"popup__reg-modal-text\">\n            {`${isRegSuccess ? regSuccess : regFailed}`}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default InfoTooltip;\n","import React, { useContext } from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\n  //Подписка на контекст CurrentUserContext\n  const currentUser = useContext(CurrentUserContext);\n\n  //Определяем, являемся ли мы владельцем карточки\n  const isOwn = card.owner._id === currentUser._id;\n\n  //Переменная для класса кнопки удаления (если карточка наша -- видим иконку удаления)\n  const cardDeleteButtonClassName = (\n    `element__delete-button ${isOwn ? 'element__delete-button_visible' : ''}`\n  );\n\n  //Определяем, есть ли у карточки поставленный нами лайк\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n  //Переменная для класса кнопки лайка (закрашивание, если карточка лайкнута нами)\n  const cardLikeButtonClassName = (\n    `element__like-button ${isLiked ? 'element__like-button_active' : ''}`\n  );\n\n  //Обработчик клика по карточке\n  function handleCardClick() {\n    onCardClick(card)\n  }\n\n  //Обработчик клика по лайку\n  function handleCardLike() {\n    onCardLike(card)\n  }\n\n  //Обработчик удаления карточки\n  function handleDeleteCard() {\n    onCardDelete(card)\n  }\n\n  return (\n    <figure className=\"element\">\n      <img className=\"element__image\" src={card.link} alt={card.name} onClick={handleCardClick} />\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteCard}></button>\n      <figcaption className=\"element__caption\">\n        <h2 className=\"element__title\">{card.name}</h2>\n        <div className=\"element__like-wrapper\">\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleCardLike}></button>\n          <p className=\"element__like-counter\">{card.likes.length}</p>\n        </div>\n      </figcaption>\n    </figure>\n  )\n}\n\nexport default Card;\n","import React, {useContext} from 'react';\nimport Card from './Card';\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport Header from \"./Header\";\n\nfunction Main(\n  { loggedIn,\n    isEditAvatarPopupOpen,\n    isEditProfilePopupOpen,\n    isAddPlacePopupOpen,\n    onCardClick,\n    cards,\n    onCardLike,\n    onCardDelete,\n    logout,\n    userLoginData\n  }) {\n\n  //Подписка на контекст CurrentUserContext\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <>\n      <Header loggedIn={loggedIn}\n              login={userLoginData}\n              link=\"/sign-in\"\n              onClick={logout}\n              headerText={'Выйти'}\n      />\n      <main className=\"content\">\n        <section className=\"profile\">\n          <div className=\"profile__wrapper\">\n            <div className=\"profile__avatar-wrapper\" onClick={isEditAvatarPopupOpen}>\n              <button type=\"button\" className=\"profile__avatar-edit-button\"></button>\n              <img className=\"profile__avatar\" src={`${currentUser.avatar}`} alt=\"Аватар пользователя\" />\n            </div>\n            <div className=\"profile__info\">\n              <h1 className=\"profile__info-name\">{currentUser.name}</h1>\n              <p className=\"profile__info-job\">{currentUser.about}</p>\n              <button type=\"button\" className=\"profile__edit-button\" onClick={isEditProfilePopupOpen}></button>\n            </div>\n          </div>\n          <button type=\"button\" className=\"profile__add-button\" onClick={isAddPlacePopupOpen}></button>\n        </section>\n        <section className=\"elements\">\n          {\n            cards.map(card => (\n              <Card\n                card={card}\n                key={card._id}\n                onCardClick={onCardClick}\n                onCardLike={onCardLike}\n                onCardDelete={onCardDelete}\n              />\n            ))\n          }\n        </section>\n      </main>\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 - {new Date().getFullYear()}. Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction PopupWithForm({ isOpen, onClose, name, title, children, buttonName, onSubmit }) {\n  return (\n      <div className={`popup popup_type_${name} ${isOpen && \"popup_is-opened\"}`}>\n        <div className=\"popup__container\">\n          <button type=\"button\" className=\"popup__close\" onClick={onClose}></button>\n          <h2 className=\"popup__title\">{title}</h2>\n          <form name={name}\n                className=\"popup__form\"\n                onSubmit={onSubmit}>\n            {children}\n            <button type=\"submit\" className=\"popup__button\">{buttonName}</button>\n          </form>\n        </div>\n      </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n  return (\n    <div className={`popup-image popup ${card && \"popup_is-opened\"}`}>\n      <div className=\"popup-image__container\">\n        <button className=\"popup__close popup-image__close\" onClick={onClose}></button>\n        <div className=\"popup-image__content-container\">\n          <figure className=\"popup-image__photo\">\n            <img src={card ? card.link : \"\"} alt={card ? card.name : \"\"} className=\"popup-image__preview\" />\n            <figcaption className=\"popup-image__title\">{card ? card.name : \"\"}</figcaption>\n          </figure>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React, { useState, useContext, useEffect } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  //Подписываемся на контекст\n  const currentUser = useContext(CurrentUserContext);\n\n  //Cтейты имени и описания профиля\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  //После загрузки данных пользователя из API, эти данные будут использоваться в управляемых компонентах (полях)\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser])\n\n  //Функция для изменения имени через поле ввода\n  function handleUserName(event) {\n    setName(event.target.value)\n  }\n\n  //Функция для изменения описания профиля через поле ввода\n  function handleUserDescription(event) {\n    setDescription(event.target.value)\n  }\n\n  //Обработчик сабмита формы\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    //Передача значений управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      name=\"edit-profile\"\n      title=\"Редактировать профиль\"\n      buttonName=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        required\n        name=\"profile-name\"\n        type=\"text\"\n        className=\"popup__name popup__input\"\n        placeholder=\"Имя\"\n        onChange={handleUserName}\n        minLength=\"2\"\n        maxLength=\"40\"\n        value={name ? name : ''}\n      />\n      <span\n        id=\"profile-name-error\"\n        className=\"error\">\n          </span>\n      <input\n        required\n        name=\"profile-job\"\n        type=\"text\"\n        className=\"popup__job popup__input\"\n        placeholder=\"О себе\"\n        onChange={handleUserDescription}\n        minLength=\"2\"\n        maxLength=\"200\"\n        value={description ? description : ''}\n      />\n      <span\n        id=\"profile-job-error\"\n        className=\"error\">\n          </span>\n\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n","import React, { useRef, useEffect } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  //Реф для прямого доступа к DOM-элементу инпута и его значению\n  const avatarRef = useRef('');\n\n  //Очистка поля ввода ссылки после закрытия\n  useEffect(() => {\n    avatarRef.current.value = '';\n  }, [isOpen])\n\n  //Обработчик сабмита формы (обновление аватарки)\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  }\n\n  return(\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Обновить аватар\"\n      name=\"edit-avatar\"\n      buttonName=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        className=\"popup__name popup__input\"\n        type=\"url\"\n        name=\"avatar\"\n        required\n        placeholder=\"Ссылка на фотографию\"\n        ref={avatarRef}\n      />\n      <span\n        id=\"avatar-error\"\n        className=\"error\"\n      >\n      </span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n","import React, { useState, useEffect } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\n  //Стейты для имени и ссылки на картинку\n  const [cardTitle, setCardTitle] = useState('');\n  const [cardLink, setCardLink] = useState('');\n\n  //Обработчик установки названия места\n  function handleCardTitle(event) {\n    setCardTitle(event.target.value)\n  }\n\n  //Обработчик установки картинки (ссылки на картинку)\n  function handleCardLink(event) {\n    setCardLink(event.target.value)\n  }\n\n  //Обработчик сабмита формы поп-апа добавления карточки\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    onAddPlace({\n      name: cardTitle,\n      link: cardLink\n    })\n  }\n\n  useEffect(() => {\n    setCardLink('')\n    setCardTitle('')\n  }, [isOpen])\n\n  return(\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Новое место\"\n      name=\"add-place\"\n      buttonName=\"Создать\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        required\n        name=\"place-name\"\n        type=\"text\"\n        className=\"popup-new-place__description popup__input popup__name\"\n        placeholder=\"Название\"\n        minLength=\"2\"\n        maxLength=\"30\"\n        onChange={handleCardTitle}\n        value={cardTitle ? cardTitle : ''}\n      />\n      <span\n        id=\"place-name-error\"\n        className=\"error\">\n          </span>\n      <input\n        required\n        name=\"place-link\"\n        type=\"url\"\n        className=\"popup-new-place__image-link popup__input popup__job\"\n        placeholder=\"Ссылка на картинку\"\n        onChange={handleCardLink}\n        value={cardLink ? cardLink : ''}\n      />\n      <span\n        id=\"place-link-error\"\n        className=\"error\">\n          </span>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory, withRouter } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport { register, login, getData } from '../utils/auth';\nimport api from \"../utils/api\";\n\nimport '../index.css';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  // Хуки\n\n  // Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({});\n\n  // Cтейт для авторизации\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  // Стейт для отображения InfoTooltip'а\n  const [isTooltipOpened, setIsTooltipOpened] = useState(false);\n\n  // Стейт для авторизации\n  const [isAuth, setIsAuth] = useState(false);\n\n  // Стейт для карточек\n  const [cards, setCards] = useState([]);\n\n  // Стейты для поп-апов (состояние - открыт / не открыт)\n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n\n  // Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  //Стейт для данных залогиненного пользователя\n  const [userLoginData, setUserLoginData] = useState('');\n\n  const history = useHistory();\n\n  // Получение данных о пользователе\n  useEffect(() => {\n    api.getUserData()\n      .then(res => {\n        setCurrentUser(res)\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  // Получаем карточки с сервера\n  useEffect(() => {\n    api.getCards()\n      .then(res => {\n        setCards(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // Обработчики\n\n  // Обработчик клика по изображению карточки (открытие поп-апа картинки)\n  function handleCardClick(props) {\n    setSelectedCard(props);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Закрытие поп-апов клавишей Esc\n  function handleClosePopupWithEsc (event) {\n    if (event.keyCode === 27) {\n      closeAllPopups();\n    }\n  }\n\n  // Показ/скрытие модалки об успешной/ неудачной регистрации\n  function openRegModal() {\n    setIsTooltipOpened(!isTooltipOpened);\n  }\n\n  // Закрытие модалки об успешной/ неудачной регистрации с помощью кнопки (крестик)\n  function closeRegModal() {\n    setIsTooltipOpened(false);\n    if (isAuth) {\n      history.push('/sign-in')\n    }\n  }\n\n  // Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  // Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n  function handleUpdateAvatar(user) {\n    api.uploadAvatar(user.avatar)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  // Обработчик кнопки редактирования аватарки\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Обработчик кнопки редактирования инф-ии профиля\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Обработчик кнопки добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Обработчик закрытия поп-апов\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setSelectedCard(null);\n    window.removeEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Регистрация и авторизация пользователя\n\n  /**\n   * Регистрация нового пользователя\n   * @param data - введенные человеком логин и пароль\n   */\n  const handleRegister = (data) => {\n    const { email, password } = data;\n    return register(email, password)\n      .then((res) => {\n        if (res.data) {\n          setIsAuth(true);\n          openRegModal();\n        }\n      })\n      .catch((err) => {\n        setIsAuth(false);\n        openRegModal();\n        console.log(`Произошла ошибка: ${err}`);\n        history.push('/sign-up');\n      });\n  };\n\n  /**\n   * Авторизация пользователя\n   * @param data - введенные человеком логин и пароль\n   */\n  const handleLogin = (data) => {\n    const { email, password } = data;\n    return login(email, password)\n      .then((res) => {\n        if (res.token) {\n          setLoggedIn(true);\n          setIsAuth(true);\n          history.push('/');\n          localStorage.setItem('jwt', res.token);\n        }\n      })\n      .catch((err) => {\n        setIsTooltipOpened(true);\n        console.log(`Произошла ошибка: ${err}`);\n      });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n\n      getData(jwt)\n        .then((res) => {\n          if(res.data) {\n            setLoggedIn(true);\n            setUserLoginData(res.data.email);\n            history.push('/');\n          }\n        })\n        .catch((err) => {\n          setIsTooltipOpened(true);\n          console.log(`Произошла ошибка: ${err}`);\n        });\n    }\n  }, [history]);\n\n  // useEffect(() => {\n  //   if (loggedIn) {\n  //     history.push('/');\n  //   }\n  // }, [history, loggedIn]);\n\n  /**\n   * Логаут пользователя\n   */\n  const handleLogout = () => {\n    localStorage.removeItem('jwt');\n    setIsAuth(false);\n  };\n\n  // Функциональности приложения\n\n  /**\n   * Функция лайка карточки\n   * @param card - текущая карточка\n   */\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n      .catch((err) => console.log(err));\n  }\n\n  // Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards(cards.filter(item => item._id !== card._id));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link)\n      .then(res => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  /**\n   * Отрисовка приложения\n   */\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        {/*<Header />*/}\n\n        {/*<Main*/}\n        {/*  isEditAvatarPopupOpen={handleEditAvatarClick}*/}\n        {/*  isEditProfilePopupOpen={handleEditProfileClick}*/}\n        {/*  isAddPlacePopupOpen={handleAddPlaceClick}*/}\n        {/*  onCardClick={handleCardClick}*/}\n        {/*  cards={cards}*/}\n        {/*  onCardLike={handleCardLike}*/}\n        {/*  onCardDelete={handleCardDelete}*/}\n        {/*/>*/}\n\n        <Switch>\n          <ProtectedRoute\n            exact path=\"/\"\n            loggedIn={loggedIn}\n            component={Main}\n            isEditAvatarPopupOpen={handleEditAvatarClick}\n            isEditProfilePopupOpen={handleEditProfileClick}\n            isAddPlacePopupOpen={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            logout={handleLogout}\n            userLoginData={userLoginData}\n          />\n          <Route path=\"/sign-in\">\n            <Login handleLogin={handleLogin} />\n          </Route>\n          <Route path=\"/sign-up\">\n            <Register handleRegister={handleRegister} />\n          </Route>\n        </Switch>\n\n        <Footer />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          onClick={(e) => e.stopPropagation()}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <PopupWithForm\n          onClose={closeAllPopups}\n          name=\"confirm-delete\"\n          title=\"Вы уверены?\"\n          buttonName=\"Да\"\n        >\n        </PopupWithForm>\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n        <InfoTooltip\n          isOpen={isTooltipOpened}\n          onClose={closeRegModal}\n          isRegSuccess={isAuth}\n          regSuccess=\"Вы успешно зарегестрировались!\"\n          regFailed=\"Что-то пошло не так! Попробуйте ещё раз.\"\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}