{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Desktop/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory, withRouter } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport { register, login, getData } from '../utils/auth';\nimport api from \"../utils/api\";\nimport '../index.css';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Хуки\n  // Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({}); // Cтейт для авторизации\n\n  const [loggedIn, setLoggedIn] = useState(false); // Стейт для отображения InfoTooltip'а\n\n  const [isTooltipOpened, setIsTooltipOpened] = useState(false); // Стейт для авторизации\n\n  const [isAuth, setIsAuth] = useState(false); // Стейт для карточек\n\n  const [cards, setCards] = useState([]); // Стейты для поп-апов (состояние - открыт / не открыт)\n\n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false); // Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\n\n  const [selectedCard, setSelectedCard] = useState(null); //Стейт для данных залогиненного пользователя\n\n  const [userLoginData, setUserLoginData] = useState({\n    _id: '',\n    email: ''\n  });\n  const history = useHistory(); // Получение данных о пользователе\n\n  useEffect(() => {\n    api.getUserData().then(res => {\n      setCurrentUser(res);\n    }).catch(err => console.log(err));\n  }, []); // Получаем карточки с сервера\n\n  useEffect(() => {\n    api.getCards().then(res => {\n      setCards(res);\n    }).catch(err => console.log(err));\n  }, []); // Обработчики\n  // Обработчик клика по изображению карточки (открытие поп-апа картинки)\n\n  function handleCardClick(props) {\n    setSelectedCard(props);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  } // Закрытие поп-апов клавишей Esc\n\n\n  function handleClosePopupWithEsc(event) {\n    if (event.keyCode === 27) {\n      closeAllPopups();\n    }\n  } // Показ/скрытие модалки об успешной/ неудачной регистрации\n\n\n  function openRegModal() {\n    setIsTooltipOpened(!isTooltipOpened);\n  } // Закрытие модалки об успешной/ неудачной регистрации с помощью кнопки (крестик)\n\n\n  function closeRegModal() {\n    setIsTooltipOpened(false);\n\n    if (isAuth) {\n      history.push('/sign-in');\n    }\n  } // Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n\n\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  } // Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n\n\n  function handleUpdateAvatar(user) {\n    api.uploadAvatar(user.avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  } // Обработчик кнопки редактирования аватарки\n\n\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  } // Обработчик кнопки редактирования инф-ии профиля\n\n\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  } // Обработчик кнопки добавления карточки\n\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  } // Обработчик закрытия поп-апов\n\n\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setSelectedCard(null);\n    window.removeEventListener('keydown', handleClosePopupWithEsc);\n  } // Регистрация и авторизация пользователя\n\n  /**\n   * Регистрация нового пользователя\n   * @param data - введенные человеком логин и пароль\n   */\n\n\n  const handleRegister = data => {\n    const {\n      email,\n      password\n    } = data;\n    return register(email, password).then(res => {\n      if (res.data) {\n        setIsAuth(true);\n        openRegModal();\n      }\n    }).catch(err => {\n      setIsAuth(false);\n      openRegModal();\n      console.log(`Произошла ошибка: ${err}`);\n      history.push('/sign-up');\n    });\n  };\n  /**\n   * Авторизация пользователя\n   * @param data - введенные человеком логин и пароль\n   */\n\n\n  const handleLogin = data => {\n    const {\n      email,\n      password\n    } = data;\n    return login(email, password).then(res => {\n      if (res.token) {\n        setLoggedIn(true);\n        setIsAuth(true);\n        history.push('/');\n        localStorage.setItem('jwt', res.token);\n      }\n    }).catch(err => {\n      setIsTooltipOpened(true);\n      console.log(`Произошла ошибка: ${err}`);\n    });\n  };\n\n  useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      getData(jwt).then(res => {\n        setLoggedIn(true);\n        setUserLoginData(res.data);\n      }).catch(err => {\n        setIsTooltipOpened(true);\n        console.log(`Произошла ошибка: ${err}`);\n      });\n    }\n  }, [loggedIn, history]); // useEffect(() => {\n  //   if (loggedIn) {\n  //     history.push('/');\n  //   }\n  // }, [history, loggedIn]);\n\n  /**\n   * Логаут пользователя\n   */\n\n  const handleLogout = () => {\n    localStorage.removeItem('jwt');\n    setIsAuth(false);\n  }; // Функциональности приложения\n\n  /**\n   * Функция лайка карточки\n   * @param card - текущая карточка\n   */\n\n\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  } // Функция удаления карточки, по аналогии с функцией лайка\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(item => item._id !== card._id));\n    }).catch(err => console.log(err));\n  } // Функция добавления карточки\n\n\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  /**\n   * Отрисовка приложения\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          component: Main,\n          isEditAvatarPopupOpen: handleEditAvatarClick,\n          isEditProfilePopupOpen: handleEditProfileClick,\n          isAddPlacePopupOpen: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          logout: handleLogout,\n          userLoginData: userLoginData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        onClick: e => e.stopPropagation()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        onClose: closeAllPopups,\n        name: \"confirm-delete\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        buttonName: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isTooltipOpened,\n        onClose: closeRegModal,\n        isRegSuccess: isAuth,\n        regSuccess: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\",\n        regFailed: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A! \\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0451 \\u0440\\u0430\\u0437.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LIZtXNdKBwwp1KFLzYOIOAKLo1I=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default _c2 = withRouter(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/artem/Desktop/dev/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","useHistory","withRouter","ProtectedRoute","CurrentUserContext","register","login","getData","api","Login","Register","InfoTooltip","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","currentUser","setCurrentUser","loggedIn","setLoggedIn","isTooltipOpened","setIsTooltipOpened","isAuth","setIsAuth","cards","setCards","isEditAvatarPopupOpen","setIsAvatarPopupOpen","isEditProfilePopupOpen","setIsProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","userLoginData","setUserLoginData","_id","email","history","getUserData","then","res","catch","err","console","log","getCards","handleCardClick","props","window","addEventListener","handleClosePopupWithEsc","event","keyCode","closeAllPopups","openRegModal","closeRegModal","push","handleUpdateUser","user","editProfile","name","about","handleUpdateAvatar","uploadAvatar","avatar","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","removeEventListener","handleRegister","data","password","handleLogin","token","localStorage","setItem","jwt","getItem","handleLogout","removeItem","handleCardLike","card","isLiked","likes","some","i","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","deleteCard","filter","item","handleAddPlace","addNewCard","link","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory, withRouter } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport { register, login, getData } from '../utils/auth';\nimport api from \"../utils/api\";\n\nimport '../index.css';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  // Хуки\n\n  // Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({});\n\n  // Cтейт для авторизации\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  // Стейт для отображения InfoTooltip'а\n  const [isTooltipOpened, setIsTooltipOpened] = useState(false);\n\n  // Стейт для авторизации\n  const [isAuth, setIsAuth] = useState(false);\n\n  // Стейт для карточек\n  const [cards, setCards] = useState([]);\n\n  // Стейты для поп-апов (состояние - открыт / не открыт)\n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n\n  // Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  //Стейт для данных залогиненного пользователя\n  const [userLoginData, setUserLoginData] = useState({\n    _id: '',\n    email: '',\n  });\n\n  const history = useHistory();\n\n  // Получение данных о пользователе\n  useEffect(() => {\n    api.getUserData()\n      .then(res => {\n        setCurrentUser(res)\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  // Получаем карточки с сервера\n  useEffect(() => {\n    api.getCards()\n      .then(res => {\n        setCards(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // Обработчики\n\n  // Обработчик клика по изображению карточки (открытие поп-апа картинки)\n  function handleCardClick(props) {\n    setSelectedCard(props);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Закрытие поп-апов клавишей Esc\n  function handleClosePopupWithEsc (event) {\n    if (event.keyCode === 27) {\n      closeAllPopups();\n    }\n  }\n\n  // Показ/скрытие модалки об успешной/ неудачной регистрации\n  function openRegModal() {\n    setIsTooltipOpened(!isTooltipOpened);\n  }\n\n  // Закрытие модалки об успешной/ неудачной регистрации с помощью кнопки (крестик)\n  function closeRegModal() {\n    setIsTooltipOpened(false);\n    if (isAuth) {\n      history.push('/sign-in')\n    }\n  }\n\n  // Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  // Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n  function handleUpdateAvatar(user) {\n    api.uploadAvatar(user.avatar)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  // Обработчик кнопки редактирования аватарки\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Обработчик кнопки редактирования инф-ии профиля\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Обработчик кнопки добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Обработчик закрытия поп-апов\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setSelectedCard(null);\n    window.removeEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Регистрация и авторизация пользователя\n\n  /**\n   * Регистрация нового пользователя\n   * @param data - введенные человеком логин и пароль\n   */\n  const handleRegister = (data) => {\n    const { email, password } = data;\n    return register(email, password)\n      .then((res) => {\n        if (res.data) {\n          setIsAuth(true);\n          openRegModal();\n        }\n      })\n      .catch((err) => {\n        setIsAuth(false);\n        openRegModal();\n        console.log(`Произошла ошибка: ${err}`);\n        history.push('/sign-up');\n      });\n  };\n\n  /**\n   * Авторизация пользователя\n   * @param data - введенные человеком логин и пароль\n   */\n  const handleLogin = (data) => {\n    const { email, password } = data;\n    return login(email, password)\n      .then((res) => {\n        if (res.token) {\n          setLoggedIn(true);\n          setIsAuth(true);\n          history.push('/');\n          localStorage.setItem('jwt', res.token);\n        }\n      })\n      .catch((err) => {\n        setIsTooltipOpened(true);\n        console.log(`Произошла ошибка: ${err}`);\n      });\n  };\n\n  useEffect(() =>{\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      getData(jwt)\n        .then((res) => {\n          setLoggedIn(true);\n          setUserLoginData(res.data);\n        })\n        .catch((err) => {\n          setIsTooltipOpened(true);\n          console.log(`Произошла ошибка: ${err}`);\n        });\n    }\n  }, [loggedIn, history]);\n\n  // useEffect(() => {\n  //   if (loggedIn) {\n  //     history.push('/');\n  //   }\n  // }, [history, loggedIn]);\n\n  /**\n   * Логаут пользователя\n   */\n  const handleLogout = () => {\n    localStorage.removeItem('jwt');\n    setIsAuth(false);\n  };\n\n  // Функциональности приложения\n\n  /**\n   * Функция лайка карточки\n   * @param card - текущая карточка\n   */\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n      .catch((err) => console.log(err));\n  }\n\n  // Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards(cards.filter(item => item._id !== card._id));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link)\n      .then(res => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  /**\n   * Отрисовка приложения\n   */\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        {/*<Header />*/}\n\n        {/*<Main*/}\n        {/*  isEditAvatarPopupOpen={handleEditAvatarClick}*/}\n        {/*  isEditProfilePopupOpen={handleEditProfileClick}*/}\n        {/*  isAddPlacePopupOpen={handleAddPlaceClick}*/}\n        {/*  onCardClick={handleCardClick}*/}\n        {/*  cards={cards}*/}\n        {/*  onCardLike={handleCardLike}*/}\n        {/*  onCardDelete={handleCardDelete}*/}\n        {/*/>*/}\n\n        <Switch>\n          <ProtectedRoute\n            exact path=\"/\"\n            loggedIn={loggedIn}\n            component={Main}\n            isEditAvatarPopupOpen={handleEditAvatarClick}\n            isEditProfilePopupOpen={handleEditProfileClick}\n            isAddPlacePopupOpen={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            logout={handleLogout}\n            userLoginData={userLoginData.email}\n          />\n          <Route path=\"/sign-in\">\n            <Login handleLogin={handleLogin} />\n          </Route>\n          <Route path=\"/sign-up\">\n            <Register handleRegister={handleRegister} />\n          </Route>\n        </Switch>\n\n        <Footer />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          onClick={(e) => e.stopPropagation()}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <PopupWithForm\n          onClose={closeAllPopups}\n          name=\"confirm-delete\"\n          title=\"Вы уверены?\"\n          buttonName=\"Да\"\n        >\n        </PopupWithForm>\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n        <InfoTooltip\n          isOpen={isTooltipOpened}\n          onClose={closeRegModal}\n          isRegSuccess={isAuth}\n          regSuccess=\"Вы успешно зарегестрировались!\"\n          regFailed=\"Что-то пошло не так! Попробуйте ещё раз.\"\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}