{"ast":null,"code":"import _toConsumableArray from\"/Users/artem/Desktop/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/artem/Desktop/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Route,Switch,useHistory,withRouter}from'react-router-dom';import ProtectedRoute from'./ProtectedRoute';import CurrentUserContext from\"../contexts/CurrentUserContext\";import{register,login,getData}from'../utils/auth';import api from\"../utils/api\";import'../index.css';import Login from'./Login';import Register from'./Register';import InfoTooltip from'./InfoTooltip';import Main from'./Main';import Footer from'./Footer';import PopupWithForm from'./PopupWithForm';import ImagePopup from'./ImagePopup';import EditProfilePopup from\"./EditProfilePopup\";import EditAvatarPopup from\"./EditAvatarPopup\";import AddPlacePopup from\"./AddPlacePopup\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Хуки\n// Стейт для данных пользователя\nvar _useState=useState({}),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];// Cтейт для авторизации\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loggedIn=_useState4[0],setLoggedIn=_useState4[1];// Стейт для отображения InfoTooltip'а\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isTooltipOpened=_useState6[0],setIsTooltipOpened=_useState6[1];// Стейт для авторизации\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isAuth=_useState8[0],setIsAuth=_useState8[1];// Стейт для карточек\nvar _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),cards=_useState10[0],setCards=_useState10[1];// Стейты для поп-апов (состояние - открыт / не открыт)\nvar _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isEditAvatarPopupOpen=_useState12[0],setIsAvatarPopupOpen=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isEditProfilePopupOpen=_useState14[0],setIsProfilePopupOpen=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isAddPlacePopupOpen=_useState16[0],setIsAddPlacePopupOpen=_useState16[1];// Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\nvar _useState17=useState(null),_useState18=_slicedToArray(_useState17,2),selectedCard=_useState18[0],setSelectedCard=_useState18[1];//Стейт для данных залогиненного пользователя\nvar _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),userLoginData=_useState20[0],setUserLoginData=_useState20[1];var history=useHistory();// Получение данных о пользователе\nuseEffect(function(){api.getUserData().then(function(res){setCurrentUser(res);}).catch(function(err){return console.log(err);});},[]);// Получаем карточки с сервера\nuseEffect(function(){api.getCards().then(function(res){setCards(res);}).catch(function(err){return console.log(err);});},[]);// Обработчики\n// Обработчик клика по изображению карточки (открытие поп-апа картинки)\nfunction handleCardClick(props){setSelectedCard(props);window.addEventListener('keydown',handleClosePopupWithEsc);}// Закрытие поп-апов клавишей Esc\nfunction handleClosePopupWithEsc(event){if(event.keyCode===27){closeAllPopups();}}// Показ/скрытие модалки об успешной/ неудачной регистрации\nfunction openRegModal(){setIsTooltipOpened(!isTooltipOpened);}// Закрытие модалки об успешной/ неудачной регистрации с помощью кнопки (крестик)\nfunction closeRegModal(){setIsTooltipOpened(false);if(isAuth){history.push('/sign-in');}}// Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\nfunction handleUpdateUser(user){api.editProfile(user.name,user.about).then(function(res){setCurrentUser(res);closeAllPopups();}).catch(function(err){return console.log(err);});}// Обработчик для обновления аватарки пользователя (отправка на сервер через API)\nfunction handleUpdateAvatar(user){api.uploadAvatar(user.avatar).then(function(res){setCurrentUser(res);closeAllPopups();}).catch(function(err){return console.log(err);});}// Обработчик кнопки редактирования аватарки\nfunction handleEditAvatarClick(){setIsAvatarPopupOpen(true);window.addEventListener('keydown',handleClosePopupWithEsc);}// Обработчик кнопки редактирования инф-ии профиля\nfunction handleEditProfileClick(){setIsProfilePopupOpen(true);window.addEventListener('keydown',handleClosePopupWithEsc);}// Обработчик кнопки добавления карточки\nfunction handleAddPlaceClick(){setIsAddPlacePopupOpen(true);window.addEventListener('keydown',handleClosePopupWithEsc);}// Обработчик закрытия поп-апов\nfunction closeAllPopups(){setIsAddPlacePopupOpen(false);setIsAvatarPopupOpen(false);setIsProfilePopupOpen(false);setSelectedCard(null);window.removeEventListener('keydown',handleClosePopupWithEsc);}// Регистрация и авторизация пользователя\n/**\n   * Регистрация нового пользователя\n   * @param data - введенные человеком логин и пароль\n   */var handleRegister=function handleRegister(data){var email=data.email,password=data.password;return register(email,password).then(function(res){if(res.data){setIsAuth(true);openRegModal();}}).catch(function(err){setIsAuth(false);openRegModal();console.log(\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));history.push('/sign-up');});};/**\n   * Авторизация пользователя\n   * @param data - введенные человеком логин и пароль\n   */var handleLogin=function handleLogin(data){var email=data.email,password=data.password;return login(email,password).then(function(res){if(res.token){setLoggedIn(true);setIsAuth(true);history.push('/');localStorage.setItem('jwt',res.token);}}).catch(function(err){setIsTooltipOpened(true);console.log(\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));});};useEffect(function(){if(localStorage.getItem('jwt')){var jwt=localStorage.getItem('jwt');getData(jwt).then(function(res){if(res.data){setLoggedIn(true);setUserLoginData(res.data.email);history.push('/');}}).catch(function(err){setIsTooltipOpened(true);console.log(\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));});}},[history]);// useEffect(() => {\n//   if (loggedIn) {\n//     history.push('/');\n//   }\n// }, [history, loggedIn]);\n/**\n   * Логаут пользователя\n   */var handleLogout=function handleLogout(){localStorage.removeItem('jwt');setIsAuth(false);};// Функциональности приложения\n/**\n   * Функция лайка карточки\n   * @param card - текущая карточка\n   */function handleCardLike(card){// Проверяем, есть ли уже лайк на этой карточке\nvar isLiked=card.likes.some(function(i){return i._id===currentUser._id;});// Отправляем запрос в API и получаем обновлённые данные карточки\napi.changeLikeCardStatus(card._id,!isLiked).then(function(newCard){// Формируем новый массив на основе имеющегося, подставляя в него новую карточку\nvar newCards=cards.map(function(c){return c._id===card._id?newCard:c;});// Обновляем стейт\nsetCards(newCards);}).catch(function(err){return console.log(err);});}// Функция удаления карточки, по аналогии с функцией лайка\nfunction handleCardDelete(card){api.deleteCard(card._id).then(function(){setCards(cards.filter(function(item){return item._id!==card._id;}));}).catch(function(err){return console.log(err);});}// Функция добавления карточки\nfunction handleAddPlace(card){api.addNewCard(card.name,card.link).then(function(res){setCards([res].concat(_toConsumableArray(cards)));closeAllPopups();}).catch(function(err){return console.log(err);});}/**\n   * Отрисовка приложения\n   */return/*#__PURE__*/_jsx(CurrentUserContext.Provider,{value:currentUser,children:/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(ProtectedRoute,{exact:true,path:\"/\",loggedIn:loggedIn,component:Main,isEditAvatarPopupOpen:handleEditAvatarClick,isEditProfilePopupOpen:handleEditProfileClick,isAddPlacePopupOpen:handleAddPlaceClick,onCardClick:handleCardClick,cards:cards,onCardLike:handleCardLike,onCardDelete:handleCardDelete,logout:handleLogout,userLoginData:userLoginData}),/*#__PURE__*/_jsx(Route,{path:\"/sign-in\",children:/*#__PURE__*/_jsx(Login,{handleLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/sign-up\",children:/*#__PURE__*/_jsx(Register,{handleRegister:handleRegister})})]}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(EditAvatarPopup,{isOpen:isEditAvatarPopupOpen,onClose:closeAllPopups,onUpdateAvatar:handleUpdateAvatar,onClick:function onClick(e){return e.stopPropagation();}}),/*#__PURE__*/_jsx(AddPlacePopup,{isOpen:isAddPlacePopupOpen,onClose:closeAllPopups,onAddPlace:handleAddPlace}),/*#__PURE__*/_jsx(EditProfilePopup,{isOpen:isEditProfilePopupOpen,onClose:closeAllPopups,onUpdateUser:handleUpdateUser}),/*#__PURE__*/_jsx(PopupWithForm,{onClose:closeAllPopups,name:\"confirm-delete\",title:\"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",buttonName:\"\\u0414\\u0430\"}),/*#__PURE__*/_jsx(ImagePopup,{card:selectedCard,onClose:closeAllPopups}),/*#__PURE__*/_jsx(InfoTooltip,{isOpen:isTooltipOpened,onClose:closeRegModal,isRegSuccess:isAuth,regSuccess:\"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\",regFailed:\"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A! \\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0451 \\u0440\\u0430\\u0437.\"})]})});}export default withRouter(App);","map":{"version":3,"sources":["/Users/artem/Desktop/dev/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","useHistory","withRouter","ProtectedRoute","CurrentUserContext","register","login","getData","api","Login","Register","InfoTooltip","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","currentUser","setCurrentUser","loggedIn","setLoggedIn","isTooltipOpened","setIsTooltipOpened","isAuth","setIsAuth","cards","setCards","isEditAvatarPopupOpen","setIsAvatarPopupOpen","isEditProfilePopupOpen","setIsProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","userLoginData","setUserLoginData","history","getUserData","then","res","catch","err","console","log","getCards","handleCardClick","props","window","addEventListener","handleClosePopupWithEsc","event","keyCode","closeAllPopups","openRegModal","closeRegModal","push","handleUpdateUser","user","editProfile","name","about","handleUpdateAvatar","uploadAvatar","avatar","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","removeEventListener","handleRegister","data","email","password","handleLogin","token","localStorage","setItem","getItem","jwt","handleLogout","removeItem","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","deleteCard","filter","item","handleAddPlace","addNewCard","link","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory, withRouter } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport { register, login, getData } from '../utils/auth';\nimport api from \"../utils/api\";\n\nimport '../index.css';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  // Хуки\n\n  // Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({});\n\n  // Cтейт для авторизации\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  // Стейт для отображения InfoTooltip'а\n  const [isTooltipOpened, setIsTooltipOpened] = useState(false);\n\n  // Стейт для авторизации\n  const [isAuth, setIsAuth] = useState(false);\n\n  // Стейт для карточек\n  const [cards, setCards] = useState([]);\n\n  // Стейты для поп-апов (состояние - открыт / не открыт)\n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n\n  // Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  //Стейт для данных залогиненного пользователя\n  const [userLoginData, setUserLoginData] = useState('');\n\n  const history = useHistory();\n\n  // Получение данных о пользователе\n  useEffect(() => {\n    api.getUserData()\n      .then(res => {\n        setCurrentUser(res)\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  // Получаем карточки с сервера\n  useEffect(() => {\n    api.getCards()\n      .then(res => {\n        setCards(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // Обработчики\n\n  // Обработчик клика по изображению карточки (открытие поп-апа картинки)\n  function handleCardClick(props) {\n    setSelectedCard(props);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Закрытие поп-апов клавишей Esc\n  function handleClosePopupWithEsc (event) {\n    if (event.keyCode === 27) {\n      closeAllPopups();\n    }\n  }\n\n  // Показ/скрытие модалки об успешной/ неудачной регистрации\n  function openRegModal() {\n    setIsTooltipOpened(!isTooltipOpened);\n  }\n\n  // Закрытие модалки об успешной/ неудачной регистрации с помощью кнопки (крестик)\n  function closeRegModal() {\n    setIsTooltipOpened(false);\n    if (isAuth) {\n      history.push('/sign-in')\n    }\n  }\n\n  // Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  // Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n  function handleUpdateAvatar(user) {\n    api.uploadAvatar(user.avatar)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  // Обработчик кнопки редактирования аватарки\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Обработчик кнопки редактирования инф-ии профиля\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Обработчик кнопки добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Обработчик закрытия поп-апов\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setSelectedCard(null);\n    window.removeEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  // Регистрация и авторизация пользователя\n\n  /**\n   * Регистрация нового пользователя\n   * @param data - введенные человеком логин и пароль\n   */\n  const handleRegister = (data) => {\n    const { email, password } = data;\n    return register(email, password)\n      .then((res) => {\n        if (res.data) {\n          setIsAuth(true);\n          openRegModal();\n        }\n      })\n      .catch((err) => {\n        setIsAuth(false);\n        openRegModal();\n        console.log(`Произошла ошибка: ${err}`);\n        history.push('/sign-up');\n      });\n  };\n\n  /**\n   * Авторизация пользователя\n   * @param data - введенные человеком логин и пароль\n   */\n  const handleLogin = (data) => {\n    const { email, password } = data;\n    return login(email, password)\n      .then((res) => {\n        if (res.token) {\n          setLoggedIn(true);\n          setIsAuth(true);\n          history.push('/');\n          localStorage.setItem('jwt', res.token);\n        }\n      })\n      .catch((err) => {\n        setIsTooltipOpened(true);\n        console.log(`Произошла ошибка: ${err}`);\n      });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n\n      getData(jwt)\n        .then((res) => {\n          if(res.data) {\n            setLoggedIn(true);\n            setUserLoginData(res.data.email);\n            history.push('/');\n          }\n        })\n        .catch((err) => {\n          setIsTooltipOpened(true);\n          console.log(`Произошла ошибка: ${err}`);\n        });\n    }\n  }, [history]);\n\n  // useEffect(() => {\n  //   if (loggedIn) {\n  //     history.push('/');\n  //   }\n  // }, [history, loggedIn]);\n\n  /**\n   * Логаут пользователя\n   */\n  const handleLogout = () => {\n    localStorage.removeItem('jwt');\n    setIsAuth(false);\n  };\n\n  // Функциональности приложения\n\n  /**\n   * Функция лайка карточки\n   * @param card - текущая карточка\n   */\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n      .catch((err) => console.log(err));\n  }\n\n  // Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards(cards.filter(item => item._id !== card._id));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link)\n      .then(res => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  /**\n   * Отрисовка приложения\n   */\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        {/*<Header />*/}\n\n        {/*<Main*/}\n        {/*  isEditAvatarPopupOpen={handleEditAvatarClick}*/}\n        {/*  isEditProfilePopupOpen={handleEditProfileClick}*/}\n        {/*  isAddPlacePopupOpen={handleAddPlaceClick}*/}\n        {/*  onCardClick={handleCardClick}*/}\n        {/*  cards={cards}*/}\n        {/*  onCardLike={handleCardLike}*/}\n        {/*  onCardDelete={handleCardDelete}*/}\n        {/*/>*/}\n\n        <Switch>\n          <ProtectedRoute\n            exact path=\"/\"\n            loggedIn={loggedIn}\n            component={Main}\n            isEditAvatarPopupOpen={handleEditAvatarClick}\n            isEditProfilePopupOpen={handleEditProfileClick}\n            isAddPlacePopupOpen={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            logout={handleLogout}\n            userLoginData={userLoginData}\n          />\n          <Route path=\"/sign-in\">\n            <Login handleLogin={handleLogin} />\n          </Route>\n          <Route path=\"/sign-up\">\n            <Register handleRegister={handleRegister} />\n          </Route>\n        </Switch>\n\n        <Footer />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          onClick={(e) => e.stopPropagation()}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <PopupWithForm\n          onClose={closeAllPopups}\n          name=\"confirm-delete\"\n          title=\"Вы уверены?\"\n          buttonName=\"Да\"\n        >\n        </PopupWithForm>\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n        <InfoTooltip\n          isOpen={isTooltipOpened}\n          onClose={closeRegModal}\n          isRegSuccess={isAuth}\n          regSuccess=\"Вы успешно зарегестрировались!\"\n          regFailed=\"Что-то пошло не так! Попробуйте ещё раз.\"\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}