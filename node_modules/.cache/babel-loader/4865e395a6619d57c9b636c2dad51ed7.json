{"ast":null,"code":"import _toConsumableArray from\"/Users/artem/Desktop/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/artem/Desktop/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'../index.css';import Header from'./Header';import Main from'./Main';import Footer from'./Footer';import PopupWithForm from'./PopupWithForm';import ImagePopup from'./ImagePopup';import api from\"../utils/api\";import CurrentUserContext from\"../contexts/CurrentUserContext\";import EditProfilePopup from\"./EditProfilePopup\";import EditAvatarPopup from\"./EditAvatarPopup\";import AddPlacePopup from\"./AddPlacePopup\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//Стейт для данных пользователя\nvar _useState=useState({}),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];useEffect(function(){api.getUserData().then(function(res){setCurrentUser(res);}).catch(function(err){return console.log(err);});},[]);//Стейты для поп-апов (состояние - открыт / не открыт)\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isEditAvatarPopupOpen=_useState4[0],setIsAvatarPopupOpen=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isEditProfilePopupOpen=_useState6[0],setIsProfilePopupOpen=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isAddPlacePopupOpen=_useState8[0],setIsAddPlacePopupOpen=_useState8[1];//Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\nvar _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),selectedCard=_useState10[0],setSelectedCard=_useState10[1];//Обработчик клика по изображению карточки (открытие поп-апа картинки)\nfunction handleCardClick(props){setSelectedCard(props);window.addEventListener('keydown',handleClosePopupWithEsc);}//Закрытие поп-апов клавишей Esc\nfunction handleClosePopupWithEsc(event){if(event.keyCode===27){closeAllPopups();}}//Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\nfunction handleUpdateUser(user){api.editProfile(user.name,user.about).then(function(res){setCurrentUser(res);closeAllPopups();}).catch(function(err){return console.log(err);});}//Обработчик для обновления аватарки пользователя (отправка на сервер через API)\nfunction handleUpdateAvatar(user){api.uploadAvatar(user.avatar).then(function(res){setCurrentUser(res);closeAllPopups();}).catch(function(err){return console.log(err);});}//Обработчик кнопки редактирования аватарки\nfunction handleEditAvatarClick(){setIsAvatarPopupOpen(true);window.addEventListener('keydown',handleClosePopupWithEsc);}//Обработчик кнопки редактирования инф-ии профиля\nfunction handleEditProfileClick(){setIsProfilePopupOpen(true);window.addEventListener('keydown',handleClosePopupWithEsc);}//Обработчик кнопки добавления карточки\nfunction handleAddPlaceClick(){setIsAddPlacePopupOpen(true);window.addEventListener('keydown',handleClosePopupWithEsc);}//Обработчик закрытия поп-апов\nfunction closeAllPopups(){setIsAddPlacePopupOpen(false);setIsAvatarPopupOpen(false);setIsProfilePopupOpen(false);setSelectedCard(null);window.removeEventListener('keydown',handleClosePopupWithEsc);}//Стейт для карточек\nvar _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),cards=_useState12[0],setCards=_useState12[1];//Получаем данные по пользователю и карточки с сервера\nuseEffect(function(){api.getCards().then(function(res){setCards(res);}).catch(function(err){return console.log(err);});},[]);//Функция лайка карточки\nfunction handleCardLike(card){//Проверяем, есть ли уже лайк на этой карточке\nvar isLiked=card.likes.some(function(i){return i._id===currentUser._id;});// Отправляем запрос в API и получаем обновлённые данные карточки\napi.changeLikeCardStatus(card._id,!isLiked).then(function(newCard){// Формируем новый массив на основе имеющегося, подставляя в него новую карточку\nvar newCards=cards.map(function(c){return c._id===card._id?newCard:c;});// Обновляем стейт\nsetCards(newCards);}).catch(function(err){return console.log(err);});}//Функция удаления карточки, по аналогии с функцией лайка\nfunction handleCardDelete(card){api.deleteCard(card._id).then(function(){setCards(cards.filter(function(item){return item._id!==card._id;}));}).catch(function(err){return console.log(err);});}//Функция добавления карточки\nfunction handleAddPlace(card){api.addNewCard(card.name,card.link).then(function(res){setCards([res].concat(_toConsumableArray(cards)));closeAllPopups();}).catch(function(err){return console.log(err);});}return/*#__PURE__*/_jsx(CurrentUserContext.Provider,{value:currentUser,children:/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Main,{isEditAvatarPopupOpen:handleEditAvatarClick,isEditProfilePopupOpen:handleEditProfileClick,isAddPlacePopupOpen:handleAddPlaceClick,onCardClick:handleCardClick,cards:cards,onCardLike:handleCardLike,onCardDelete:handleCardDelete}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(EditAvatarPopup,{isOpen:isEditAvatarPopupOpen,onClose:closeAllPopups,onUpdateAvatar:handleUpdateAvatar,onClick:function onClick(e){return e.stopPropagation();}}),/*#__PURE__*/_jsx(AddPlacePopup,{isOpen:isAddPlacePopupOpen,onClose:closeAllPopups,onAddPlace:handleAddPlace}),/*#__PURE__*/_jsx(EditProfilePopup,{isOpen:isEditProfilePopupOpen,onClose:closeAllPopups,onUpdateUser:handleUpdateUser}),/*#__PURE__*/_jsx(PopupWithForm,{onClose:closeAllPopups,name:\"confirm-delete\",title:\"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",buttonName:\"\\u0414\\u0430\"}),/*#__PURE__*/_jsx(ImagePopup,{card:selectedCard,onClose:closeAllPopups})]})});}export default App;","map":{"version":3,"sources":["/Users/artem/Desktop/dev/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","currentUser","setCurrentUser","getUserData","then","res","catch","err","console","log","isEditAvatarPopupOpen","setIsAvatarPopupOpen","isEditProfilePopupOpen","setIsProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","handleCardClick","props","window","addEventListener","handleClosePopupWithEsc","event","keyCode","closeAllPopups","handleUpdateUser","user","editProfile","name","about","handleUpdateAvatar","uploadAvatar","avatar","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","removeEventListener","cards","setCards","getCards","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","deleteCard","filter","item","handleAddPlace","addNewCard","link","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from \"../utils/api\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  //Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    api.getUserData()\n      .then(res => {\n        setCurrentUser(res)\n      })\n      .catch(err => console.log(err));\n  }, [])\n\n  //Стейты для поп-апов (состояние - открыт / не открыт)\n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n\n  //Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  //Обработчик клика по изображению карточки (открытие поп-апа картинки)\n  function handleCardClick(props) {\n    setSelectedCard(props);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Закрытие поп-апов клавишей Esc\n  function handleClosePopupWithEsc (event) {\n    if (event.keyCode === 27) {\n      closeAllPopups();\n    }\n  }\n\n  //Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  //Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n  function handleUpdateAvatar(user) {\n    api.uploadAvatar(user.avatar)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  //Обработчик кнопки редактирования аватарки\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Обработчик кнопки редактирования инф-ии профиля\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Обработчик кнопки добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Обработчик закрытия поп-апов\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setSelectedCard(null);\n    window.removeEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Стейт для карточек\n  const [cards, setCards] = useState([]);\n\n  //Получаем данные по пользователю и карточки с сервера\n  useEffect(() => {\n    api.getCards()\n      .then(res => {\n        setCards(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  //Функция лайка карточки\n  function handleCardLike(card) {\n    //Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n      .catch(err => console.log(err));\n  }\n\n  //Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards(cards.filter(item => item._id !== card._id));\n      })\n      .catch(err => console.log(err));\n  }\n\n  //Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link)\n      .then(res => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n\n        <Main\n          isEditAvatarPopupOpen={handleEditAvatarClick}\n          isEditProfilePopupOpen={handleEditProfileClick}\n          isAddPlacePopupOpen={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n\n        <Footer />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          onClick={(e) => e.stopPropagation()}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <PopupWithForm\n          onClose={closeAllPopups}\n          name=\"confirm-delete\"\n          title=\"Вы уверены?\"\n          buttonName=\"Да\"\n        >\n        </PopupWithForm>\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}