{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Desktop/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, Route, Switch, useHistory, withRouter } from 'react-router-dom';\nimport '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from \"../utils/api\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({});\n  useEffect(() => {\n    api.getUserData().then(res => {\n      setCurrentUser(res);\n    }).catch(err => console.log(err));\n  }, []); //Стейты для поп-апов (состояние - открыт / не открыт)\n\n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false); //Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\n\n  const [selectedCard, setSelectedCard] = useState(null); //Обработчик клика по изображению карточки (открытие поп-апа картинки)\n\n  function handleCardClick(props) {\n    setSelectedCard(props);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  } //Закрытие поп-апов клавишей Esc\n\n\n  function handleClosePopupWithEsc(event) {\n    if (event.keyCode === 27) {\n      closeAllPopups();\n    }\n  } //Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n\n\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  } //Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n\n\n  function handleUpdateAvatar(user) {\n    api.uploadAvatar(user.avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  } //Обработчик кнопки редактирования аватарки\n\n\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  } //Обработчик кнопки редактирования инф-ии профиля\n\n\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  } //Обработчик кнопки добавления карточки\n\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  } //Обработчик закрытия поп-апов\n\n\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setSelectedCard(null);\n    window.removeEventListener('keydown', handleClosePopupWithEsc);\n  } //Стейт для карточек\n\n\n  const [cards, setCards] = useState([]); //Получаем данные по пользователю и карточки с сервера\n\n  useEffect(() => {\n    api.getCards().then(res => {\n      setCards(res);\n    }).catch(err => console.log(err));\n  }, []); //Функция лайка карточки\n\n  function handleCardLike(card) {\n    //Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  } //Функция удаления карточки, по аналогии с функцией лайка\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(item => item._id !== card._id));\n    }).catch(err => console.log(err));\n  } //Функция добавления карточки\n\n\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        isEditAvatarPopupOpen: handleEditAvatarClick,\n        isEditProfilePopupOpen: handleEditProfileClick,\n        isAddPlacePopupOpen: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        onClick: e => e.stopPropagation()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        onClose: closeAllPopups,\n        name: \"confirm-delete\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        buttonName: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EvPISBSqBNwHthi24sv3y/+0quk=\");\n\n_c = App;\nexport default _c2 = withRouter(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/artem/Desktop/dev/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Redirect","Route","Switch","useHistory","withRouter","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","currentUser","setCurrentUser","getUserData","then","res","catch","err","console","log","isEditAvatarPopupOpen","setIsAvatarPopupOpen","isEditProfilePopupOpen","setIsProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","handleCardClick","props","window","addEventListener","handleClosePopupWithEsc","event","keyCode","closeAllPopups","handleUpdateUser","user","editProfile","name","about","handleUpdateAvatar","uploadAvatar","avatar","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","removeEventListener","cards","setCards","getCards","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","deleteCard","filter","item","handleAddPlace","addNewCard","link","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Redirect, Route, Switch, useHistory, withRouter } from 'react-router-dom';\n\nimport '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from \"../utils/api\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  //Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    api.getUserData()\n      .then(res => {\n        setCurrentUser(res)\n      })\n      .catch(err => console.log(err));\n  }, [])\n\n  //Стейты для поп-апов (состояние - открыт / не открыт)\n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n\n  //Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  //Обработчик клика по изображению карточки (открытие поп-апа картинки)\n  function handleCardClick(props) {\n    setSelectedCard(props);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Закрытие поп-апов клавишей Esc\n  function handleClosePopupWithEsc (event) {\n    if (event.keyCode === 27) {\n      closeAllPopups();\n    }\n  }\n\n  //Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  //Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n  function handleUpdateAvatar(user) {\n    api.uploadAvatar(user.avatar)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  //Обработчик кнопки редактирования аватарки\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Обработчик кнопки редактирования инф-ии профиля\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Обработчик кнопки добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    window.addEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Обработчик закрытия поп-апов\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setSelectedCard(null);\n    window.removeEventListener('keydown', handleClosePopupWithEsc);\n  }\n\n  //Стейт для карточек\n  const [cards, setCards] = useState([]);\n\n  //Получаем данные по пользователю и карточки с сервера\n  useEffect(() => {\n    api.getCards()\n      .then(res => {\n        setCards(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  //Функция лайка карточки\n  function handleCardLike(card) {\n    //Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n      .catch(err => console.log(err));\n  }\n\n  //Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards(cards.filter(item => item._id !== card._id));\n      })\n      .catch(err => console.log(err));\n  }\n\n  //Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link)\n      .then(res => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n\n        <Main\n          isEditAvatarPopupOpen={handleEditAvatarClick}\n          isEditProfilePopupOpen={handleEditProfileClick}\n          isAddPlacePopupOpen={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n\n        <Footer />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          onClick={(e) => e.stopPropagation()}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <PopupWithForm\n          onClose={closeAllPopups}\n          name=\"confirm-delete\"\n          title=\"Вы уверены?\"\n          buttonName=\"Да\"\n        >\n        </PopupWithForm>\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}