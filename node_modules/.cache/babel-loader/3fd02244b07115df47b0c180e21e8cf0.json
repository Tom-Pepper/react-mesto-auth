{"ast":null,"code":"import _classCallCheck from\"/Users/artem/Desktop/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/artem/Desktop/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";/** Класс API для работы с сервером.\n * Описаны методы для работы с карточками, которые тянутся с сервера и отправляются на сервер\n */var Api=/*#__PURE__*/function(){function Api(config){_classCallCheck(this,Api);this._url=config.url;this._headers=config.headers;}_createClass(Api,[{key:\"_getResponse\",value:function _getResponse(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}}},{key:\"getCards\",value:function getCards(){var _this=this;return fetch(\"\".concat(this._url,\"/cards\"),{headers:this._headers}).then(function(res){return _this._getResponse(res);});}},{key:\"getUserData\",value:function getUserData(){var _this2=this;return fetch(\"\".concat(this._url,\"/users/me\"),{headers:this._headers}).then(function(res){return _this2._getResponse(res);});}},{key:\"getInitialData\",value:function getInitialData(){return Promise.all([this.getUserData(),this.getCards()]);}},{key:\"editProfile\",value:function editProfile(name,job){var _this3=this;return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:name,about:job})}).then(function(res){return _this3._getResponse(res);});}},{key:\"addNewCard\",value:function addNewCard(name,link){var _this4=this;return fetch(\"\".concat(this._url,\"/cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(function(res){return _this4._getResponse(res);});}},{key:\"likeCard\",value:function likeCard(id){var _this5=this;return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:\"PUT\",headers:this._headers}).then(function(res){return _this5._getResponse(res);});}},{key:\"dislikeCard\",value:function dislikeCard(id){var _this6=this;return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:\"DELETE\",headers:this._headers}).then(function(res){return _this6._getResponse(res);});}},{key:\"deleteCard\",value:function deleteCard(id){var _this7=this;return fetch(\"\".concat(this._url,\"/cards/\").concat(id),{method:\"DELETE\",headers:this._headers}).then(function(res){return _this7._getResponse(res);});}},{key:\"uploadAvatar\",value:function uploadAvatar(url){var _this8=this;return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:url})}).then(function(res){return _this8._getResponse(res);});}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){var _this9=this;return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(cardId),{method:isLiked?\"PUT\":\"DELETE\",headers:this._headers}).then(function(res){return _this9._getResponse(res);});}}]);return Api;}();//Объект api для доступа к серверу, откуда будем тянуть все нужные данные\nvar api=new Api({url:'https://mesto.nomoreparties.co/v1/cohort-18',headers:{authorization:\"36f02e32-425e-4cd6-9a5e-ab45df68f83b\",\"Content-Type\":\"application/json\"}});export default api;","map":{"version":3,"sources":["/Users/artem/Desktop/dev/mesto-react/src/utils/api.js"],"names":["Api","config","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_getResponse","all","getUserData","getCards","name","job","method","body","JSON","stringify","about","link","id","avatar","cardId","isLiked","api","authorization"],"mappings":"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","sourcesContent":["/** Класс API для работы с сервером.\n * Описаны методы для работы с карточками, которые тянутся с сервера и отправляются на сервер\n */\n\nclass Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _getResponse(res) {\n    if(res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    })\n      .then(res => this._getResponse(res))\n  }\n\n  getUserData() {\n    return fetch(`${this._url}/users/me`,\n      {\n        headers: this._headers\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  getInitialData() {\n    return Promise.all([this.getUserData(), this.getCards()]);\n  }\n\n  editProfile(name, job) {\n    return fetch(`${this._url}/users/me`,\n      {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          about: job\n        })\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this._url}/cards`,\n      {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  likeCard(id) {\n    return fetch(`${this._url}/cards/likes/${id}`,\n      {\n        method: \"PUT\",\n        headers: this._headers\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  dislikeCard(id) {\n    return fetch(`${this._url}/cards/likes/${id}`,\n      {\n        method: \"DELETE\",\n        headers: this._headers,\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`,\n      {\n        method: \"DELETE\",\n        headers: this._headers,\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  uploadAvatar(url) {\n    return fetch(`${this._url}/users/me/avatar`,\n      {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: url\n        })\n      })\n      .then(res => this._getResponse(res))\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/likes/${cardId}`,\n      {\n        method: isLiked ? \"PUT\" : \"DELETE\",\n        headers: this._headers\n      })\n      .then(res => this._getResponse(res))\n  }\n}\n\n//Объект api для доступа к серверу, откуда будем тянуть все нужные данные\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-18',\n  headers: {\n    authorization: \"36f02e32-425e-4cd6-9a5e-ab45df68f83b\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;\n"]},"metadata":{},"sourceType":"module"}