{"ast":null,"code":"import _slicedToArray from\"/Users/artem/Desktop/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import PopupWithForm from\"./PopupWithForm\";import CurrentUserContext from\"../contexts/CurrentUserContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EditProfilePopup(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,onUpdateUser=_ref.onUpdateUser;//Подписываемся на контекст\nvar currentUser=useContext(CurrentUserContext);//Cтейты имени и описания профиля\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];//После загрузки данных пользователя из API, эти данные будут использоваться в управляемых компонентах (полях)\nuseEffect(function(){setName(currentUser.name);setDescription(currentUser.about);},[currentUser]);//Функция для изменения имени через поле ввода\nfunction handleUserName(event){setName(event.target.value);}//Функция для изменения описания профиля через поле ввода\nfunction handleUserDescription(event){setDescription(event.target.value);}//Обработчик сабмита формы\nfunction handleSubmit(event){event.preventDefault();//Передача значений управляемых компонентов во внешний обработчик\nonUpdateUser({name:name,about:description});}return/*#__PURE__*/_jsxs(PopupWithForm,{isOpen:isOpen,onClose:onClose,name:\"edit-profile\",title:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",buttonName:\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{required:true,name:\"profile-name\",type:\"text\",className:\"popup__name popup__input\",placeholder:\"\\u0418\\u043C\\u044F\",onChange:handleUserName,minLength:\"2\",maxLength:\"40\",value:name?name:''}),/*#__PURE__*/_jsx(\"span\",{id:\"profile-name-error\",className:\"error\"}),/*#__PURE__*/_jsx(\"input\",{required:true,name:\"profile-job\",type:\"text\",className:\"popup__job popup__input\",placeholder:\"\\u041E \\u0441\\u0435\\u0431\\u0435\",onChange:handleUserDescription,minLength:\"2\",maxLength:\"200\",value:description?description:''}),/*#__PURE__*/_jsx(\"span\",{id:\"profile-job-error\",className:\"error\"})]});}export default EditProfilePopup;","map":{"version":3,"sources":["/Users/artem/Desktop/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useState","useContext","useEffect","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","currentUser","name","setName","description","setDescription","about","handleUserName","event","target","value","handleUserDescription","handleSubmit","preventDefault"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,gCAA/B,C,wFAEA,QAASC,CAAAA,gBAAT,MAA6D,IAAjCC,CAAAA,MAAiC,MAAjCA,MAAiC,CAAzBC,OAAyB,MAAzBA,OAAyB,CAAhBC,YAAgB,MAAhBA,YAAgB,CAC3D;AACA,GAAMC,CAAAA,WAAW,CAAGR,UAAU,CAACG,kBAAD,CAA9B,CAEA;AAJ2D,cAKnCJ,QAAQ,CAAC,EAAD,CAL2B,wCAKpDU,IALoD,eAK9CC,OAL8C,8BAMrBX,QAAQ,CAAC,EAAD,CANa,yCAMpDY,WANoD,eAMvCC,cANuC,eAQ3D;AACAX,SAAS,CAAC,UAAM,CACdS,OAAO,CAACF,WAAW,CAACC,IAAb,CAAP,CACAG,cAAc,CAACJ,WAAW,CAACK,KAAb,CAAd,CACD,CAHQ,CAGN,CAACL,WAAD,CAHM,CAAT,CAKA;AACA,QAASM,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC7BL,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP,CACD,CAED;AACA,QAASC,CAAAA,qBAAT,CAA+BH,KAA/B,CAAsC,CACpCH,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CACD,CAED;AACA,QAASE,CAAAA,YAAT,CAAsBJ,KAAtB,CAA6B,CAC3BA,KAAK,CAACK,cAAN,GAEA;AACAb,YAAY,CAAC,CACXE,IAAI,CAAEA,IADK,CAEXI,KAAK,CAAEF,WAFI,CAAD,CAAZ,CAID,CAED,mBACE,MAAC,aAAD,EACE,MAAM,CAAEN,MADV,CAEE,OAAO,CAAEC,OAFX,CAGE,IAAI,CAAC,cAHP,CAIE,KAAK,CAAC,2HAJR,CAKE,UAAU,CAAC,wDALb,CAME,QAAQ,CAAEa,YANZ,wBAQE,cACE,QAAQ,KADV,CAEE,IAAI,CAAC,cAFP,CAGE,IAAI,CAAC,MAHP,CAIE,SAAS,CAAC,0BAJZ,CAKE,WAAW,CAAC,oBALd,CAME,QAAQ,CAAEL,cANZ,CAOE,SAAS,CAAC,GAPZ,CAQE,SAAS,CAAC,IARZ,CASE,KAAK,CAAEL,IAAI,CAAGA,IAAH,CAAU,EATvB,EARF,cAmBE,aACE,EAAE,CAAC,oBADL,CAEE,SAAS,CAAC,OAFZ,EAnBF,cAuBE,cACE,QAAQ,KADV,CAEE,IAAI,CAAC,aAFP,CAGE,IAAI,CAAC,MAHP,CAIE,SAAS,CAAC,yBAJZ,CAKE,WAAW,CAAC,iCALd,CAME,QAAQ,CAAES,qBANZ,CAOE,SAAS,CAAC,GAPZ,CAQE,SAAS,CAAC,KARZ,CASE,KAAK,CAAEP,WAAW,CAAGA,WAAH,CAAiB,EATrC,EAvBF,cAkCE,aACE,EAAE,CAAC,mBADL,CAEE,SAAS,CAAC,OAFZ,EAlCF,GADF,CA0CD,CAED,cAAeP,CAAAA,gBAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  //Подписываемся на контекст\n  const currentUser = useContext(CurrentUserContext);\n\n  //Cтейты имени и описания профиля\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  //После загрузки данных пользователя из API, эти данные будут использоваться в управляемых компонентах (полях)\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser])\n\n  //Функция для изменения имени через поле ввода\n  function handleUserName(event) {\n    setName(event.target.value)\n  }\n\n  //Функция для изменения описания профиля через поле ввода\n  function handleUserDescription(event) {\n    setDescription(event.target.value)\n  }\n\n  //Обработчик сабмита формы\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    //Передача значений управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      name=\"edit-profile\"\n      title=\"Редактировать профиль\"\n      buttonName=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        required\n        name=\"profile-name\"\n        type=\"text\"\n        className=\"popup__name popup__input\"\n        placeholder=\"Имя\"\n        onChange={handleUserName}\n        minLength=\"2\"\n        maxLength=\"40\"\n        value={name ? name : ''}\n      />\n      <span\n        id=\"profile-name-error\"\n        className=\"error\">\n          </span>\n      <input\n        required\n        name=\"profile-job\"\n        type=\"text\"\n        className=\"popup__job popup__input\"\n        placeholder=\"О себе\"\n        onChange={handleUserDescription}\n        minLength=\"2\"\n        maxLength=\"200\"\n        value={description ? description : ''}\n      />\n      <span\n        id=\"profile-job-error\"\n        className=\"error\">\n          </span>\n\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n"]},"metadata":{},"sourceType":"module"}